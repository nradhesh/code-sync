name: Full Stack CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  sonarcloudscan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
          fetch-depth: 0
    - name: SonarScan 
      uses: sonarsource/sonarcloud-github-action@master
      env:
            GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        args: >
              -Dsonar.organization=spart
              -Dsonar.projectKey=Spartan-2_code-sync
  server-build:
    name: Server Build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: 'server/package-lock.json'
    
    - name: Install server dependencies
      working-directory: ./server
      run: npm ci
    
    - name: Build server
      working-directory: ./server
      run: npm run build
    
    - name: Verify server build
      working-directory: ./server
      run: |
        echo "Server build output:"
        ls -la dist/
        if [ ! -d "dist" ]; then
          echo "Error: Server build failed - dist directory not found"
          exit 1
        fi

  client-build:
    name: Client Build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18.x'
        cache: 'npm'
        cache-dependency-path: 'client/package-lock.json'
    
    - name: Install client dependencies
      working-directory: ./client
      run: npm ci
    
    - name: Build client
      working-directory: ./client
      run: npm run build
      
    - name: Run client tests
      working-directory: ./client
      run: npm test
    
    - name: Verify client build
      working-directory: ./client
      run: |
        echo "Client build output:"
        ls -la dist/
        if [ ! -d "dist" ]; then
          echo "Error: Client build failed - dist directory not found"
          exit 1
        fi

  # Optional: Add a job that runs after both builds succeed
  notify:
    name: Notify Build Status
    needs: [server-build, client-build]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Check build status
      run: |
        echo "Server build status: ${{ needs.server-build.result }}"
        echo "Client build status: ${{ needs.client-build.result }}"
        if [ "${{ needs.server-build.result }}" != "success" ] || [ "${{ needs.client-build.result }}" != "success" ]; then
          echo "::error::One or more builds failed. Check the logs for details."
          exit 1
        else
          echo "All builds passed successfully!"
        fi 
